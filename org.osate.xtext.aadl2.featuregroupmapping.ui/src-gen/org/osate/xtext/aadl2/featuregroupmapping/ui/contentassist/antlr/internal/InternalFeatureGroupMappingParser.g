/*
* generated by Xtext
*/
parser grammar InternalFeatureGroupMappingParser;

options {
	tokenVocab=InternalFeatureGroupMappingLexer;
	superClass=AbstractInternalContentAssistParser;
	
}

@header {
package org.osate.xtext.aadl2.featuregroupmapping.ui.contentassist.antlr.internal; 

import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.osate.xtext.aadl2.featuregroupmapping.services.FeatureGroupMappingGrammarAccess;

}

@members {
 
 	private FeatureGroupMappingGrammarAccess grammarAccess;
 	
 	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
 	
 	{
		tokenNameToValue.put("KEYWORD_1", "'.'");
		tokenNameToValue.put("KEYWORD_2", "';'");
		tokenNameToValue.put("KEYWORD_3", "'::'");
		tokenNameToValue.put("KEYWORD_4", "'<=>'");
		tokenNameToValue.put("KEYWORD_5", "'end'");
		tokenNameToValue.put("KEYWORD_6", "'use'");
		tokenNameToValue.put("KEYWORD_7", "'extends'");
		tokenNameToValue.put("KEYWORD_8", "'library'");
		tokenNameToValue.put("KEYWORD_9", "'mappings'");
 	}
 	
    public void setGrammarAccess(FeatureGroupMappingGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }

	@Override
    protected String getValueForTokenName(String tokenName) {
    	String result = tokenNameToValue.get(tokenName);
    	if (result == null)
    		result = tokenName;
    	return result;
    }
}




// Entry rule entryRuleFGMGrammarRoot
entryRuleFGMGrammarRoot 
:
{ before(grammarAccess.getFGMGrammarRootRule()); }
	 ruleFGMGrammarRoot
{ after(grammarAccess.getFGMGrammarRootRule()); } 
	 EOF 
;

// Rule FGMGrammarRoot
ruleFGMGrammarRoot 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFGMGrammarRootAccess().getAlternatives()); }
(rule__FGMGrammarRoot__Alternatives)
{ after(grammarAccess.getFGMGrammarRootAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFGMLibrary
entryRuleFGMLibrary 
:
{ before(grammarAccess.getFGMLibraryRule()); }
	 ruleFGMLibrary
{ after(grammarAccess.getFGMLibraryRule()); } 
	 EOF 
;

// Rule FGMLibrary
ruleFGMLibrary 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
(
{ before(grammarAccess.getFGMLibraryAccess().getFeaturemappingsetAssignment()); }
(rule__FGMLibrary__FeaturemappingsetAssignment)
{ after(grammarAccess.getFGMLibraryAccess().getFeaturemappingsetAssignment()); }
)
(
{ before(grammarAccess.getFGMLibraryAccess().getFeaturemappingsetAssignment()); }
(rule__FGMLibrary__FeaturemappingsetAssignment)*
{ after(grammarAccess.getFGMLibraryAccess().getFeaturemappingsetAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureMappingset
entryRuleFeatureMappingset 
:
{ before(grammarAccess.getFeatureMappingsetRule()); }
	 ruleFeatureMappingset
{ after(grammarAccess.getFeatureMappingsetRule()); } 
	 EOF 
;

// Rule FeatureMappingset
ruleFeatureMappingset 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFeatureMappingsetAccess().getGroup()); }
(rule__FeatureMappingset__Group__0)
{ after(grammarAccess.getFeatureMappingsetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFGMSubclause
entryRuleFGMSubclause 
:
{ before(grammarAccess.getFGMSubclauseRule()); }
	 ruleFGMSubclause
{ after(grammarAccess.getFGMSubclauseRule()); } 
	 EOF 
;

// Rule FGMSubclause
ruleFGMSubclause 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFGMSubclauseAccess().getGroup()); }
(rule__FGMSubclause__Group__0)
{ after(grammarAccess.getFGMSubclauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}











// Entry rule entryRuleFeatureMapping
entryRuleFeatureMapping 
:
{ before(grammarAccess.getFeatureMappingRule()); }
	 ruleFeatureMapping
{ after(grammarAccess.getFeatureMappingRule()); } 
	 EOF 
;

// Rule FeatureMapping
ruleFeatureMapping 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFeatureMappingAccess().getGroup()); }
(rule__FeatureMapping__Group__0)
{ after(grammarAccess.getFeatureMappingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeaturePath
entryRuleFeaturePath 
:
{ before(grammarAccess.getFeaturePathRule()); }
	 ruleFeaturePath
{ after(grammarAccess.getFeaturePathRule()); } 
	 EOF 
;

// Rule FeaturePath
ruleFeaturePath 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFeaturePathAccess().getGroup()); }
(rule__FeaturePath__Group__0)
{ after(grammarAccess.getFeaturePathAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureReference
entryRuleFeatureReference 
:
{ before(grammarAccess.getFeatureReferenceRule()); }
	 ruleFeatureReference
{ after(grammarAccess.getFeatureReferenceRule()); } 
	 EOF 
;

// Rule FeatureReference
ruleFeatureReference 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFeatureReferenceAccess().getFeatureAssignment()); }
(rule__FeatureReference__FeatureAssignment)
{ after(grammarAccess.getFeatureReferenceAccess().getFeatureAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQFGTMREF
entryRuleQFGTMREF 
:
{ before(grammarAccess.getQFGTMREFRule()); }
	 ruleQFGTMREF
{ after(grammarAccess.getQFGTMREFRule()); } 
	 EOF 
;

// Rule QFGTMREF
ruleQFGTMREF 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getQFGTMREFAccess().getGroup()); }
(rule__QFGTMREF__Group__0)
{ after(grammarAccess.getQFGTMREFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__FGMGrammarRoot__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGMGrammarRootAccess().getGroup_0()); }
(rule__FGMGrammarRoot__Group_0__0)
{ after(grammarAccess.getFGMGrammarRootAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFGMGrammarRootAccess().getFgmscAssignment_1()); }
(rule__FGMGrammarRoot__FgmscAssignment_1)
{ after(grammarAccess.getFGMGrammarRootAccess().getFgmscAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__FGMGrammarRoot__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FGMGrammarRoot__Group_0__0__Impl
	rule__FGMGrammarRoot__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FGMGrammarRoot__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGMGrammarRootAccess().getLibraryKeyword_0_0()); }

	KEYWORD_8 

{ after(grammarAccess.getFGMGrammarRootAccess().getLibraryKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FGMGrammarRoot__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FGMGrammarRoot__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FGMGrammarRoot__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGMGrammarRootAccess().getFgmlAssignment_0_1()); }
(rule__FGMGrammarRoot__FgmlAssignment_0_1)
{ after(grammarAccess.getFGMGrammarRootAccess().getFgmlAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FeatureMappingset__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMappingset__Group__0__Impl
	rule__FeatureMappingset__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMappingset__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMappingsetAccess().getMappingsKeyword_0()); }

	KEYWORD_9 

{ after(grammarAccess.getFeatureMappingsetAccess().getMappingsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMappingset__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMappingset__Group__1__Impl
	rule__FeatureMappingset__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMappingset__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMappingsetAccess().getNameAssignment_1()); }
(rule__FeatureMappingset__NameAssignment_1)
{ after(grammarAccess.getFeatureMappingsetAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMappingset__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMappingset__Group__2__Impl
	rule__FeatureMappingset__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMappingset__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMappingsetAccess().getGroup_2()); }
(rule__FeatureMappingset__Group_2__0)?
{ after(grammarAccess.getFeatureMappingsetAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMappingset__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMappingset__Group__3__Impl
	rule__FeatureMappingset__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMappingset__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMappingsetAccess().getMappingAssignment_3()); }
(rule__FeatureMappingset__MappingAssignment_3)
{ after(grammarAccess.getFeatureMappingsetAccess().getMappingAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMappingset__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMappingset__Group__4__Impl
	rule__FeatureMappingset__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMappingset__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMappingsetAccess().getEndKeyword_4()); }

	KEYWORD_5 

{ after(grammarAccess.getFeatureMappingsetAccess().getEndKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMappingset__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMappingset__Group__5__Impl
	rule__FeatureMappingset__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMappingset__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMappingsetAccess().getMappingsKeyword_5()); }

	KEYWORD_9 

{ after(grammarAccess.getFeatureMappingsetAccess().getMappingsKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMappingset__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMappingset__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMappingset__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMappingsetAccess().getSemicolonKeyword_6()); }

	KEYWORD_2 

{ after(grammarAccess.getFeatureMappingsetAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__FeatureMappingset__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMappingset__Group_2__0__Impl
	rule__FeatureMappingset__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMappingset__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMappingsetAccess().getExtendsKeyword_2_0()); }

	KEYWORD_7 

{ after(grammarAccess.getFeatureMappingsetAccess().getExtendsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMappingset__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMappingset__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMappingset__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMappingsetAccess().getMappingsetAssignment_2_1()); }
(rule__FeatureMappingset__MappingsetAssignment_2_1)
{ after(grammarAccess.getFeatureMappingsetAccess().getMappingsetAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FGMSubclause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FGMSubclause__Group__0__Impl
	rule__FGMSubclause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FGMSubclause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGMSubclauseAccess().getUseKeyword_0()); }

	KEYWORD_6 

{ after(grammarAccess.getFGMSubclauseAccess().getUseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FGMSubclause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FGMSubclause__Group__1__Impl
	rule__FGMSubclause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FGMSubclause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGMSubclauseAccess().getMappingsKeyword_1()); }

	KEYWORD_9 

{ after(grammarAccess.getFGMSubclauseAccess().getMappingsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FGMSubclause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FGMSubclause__Group__2__Impl
	rule__FGMSubclause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FGMSubclause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGMSubclauseAccess().getMappingsetAssignment_2()); }
(rule__FGMSubclause__MappingsetAssignment_2)
{ after(grammarAccess.getFGMSubclauseAccess().getMappingsetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FGMSubclause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FGMSubclause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FGMSubclause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGMSubclauseAccess().getSemicolonKeyword_3()); }

	KEYWORD_2 

{ after(grammarAccess.getFGMSubclauseAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FeatureMapping__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMapping__Group__0__Impl
	rule__FeatureMapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMapping__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMappingAccess().getLeftAssignment_0()); }
(rule__FeatureMapping__LeftAssignment_0)
{ after(grammarAccess.getFeatureMappingAccess().getLeftAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMapping__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMapping__Group__1__Impl
	rule__FeatureMapping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMapping__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMappingAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_1()); }

	KEYWORD_4 

{ after(grammarAccess.getFeatureMappingAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMapping__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMapping__Group__2__Impl
	rule__FeatureMapping__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMapping__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMappingAccess().getRightAssignment_2()); }
(rule__FeatureMapping__RightAssignment_2)
{ after(grammarAccess.getFeatureMappingAccess().getRightAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureMapping__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureMapping__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMapping__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMappingAccess().getSemicolonKeyword_3()); }

	KEYWORD_2 

{ after(grammarAccess.getFeatureMappingAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FeaturePath__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeaturePath__Group__0__Impl
	rule__FeaturePath__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathAccess().getGroup_0()); }
(rule__FeaturePath__Group_0__0)
{ after(grammarAccess.getFeaturePathAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeaturePath__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeaturePath__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFeaturePathAccess().getFeatureReferenceAssignment_1()); }
(rule__FeaturePath__FeatureReferenceAssignment_1)
{ after(grammarAccess.getFeaturePathAccess().getFeatureReferenceAssignment_1()); }
)
(
{ before(grammarAccess.getFeaturePathAccess().getFeatureReferenceAssignment_1()); }
(rule__FeaturePath__FeatureReferenceAssignment_1)*
{ after(grammarAccess.getFeaturePathAccess().getFeatureReferenceAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FeaturePath__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeaturePath__Group_0__0__Impl
	rule__FeaturePath__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathAccess().getFeatureGroupTypeAssignment_0_0()); }
(rule__FeaturePath__FeatureGroupTypeAssignment_0_0)
{ after(grammarAccess.getFeaturePathAccess().getFeatureGroupTypeAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeaturePath__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeaturePath__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathAccess().getFullStopKeyword_0_1()); }

	KEYWORD_1 

{ after(grammarAccess.getFeaturePathAccess().getFullStopKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QFGTMREF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QFGTMREF__Group__0__Impl
	rule__QFGTMREF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QFGTMREF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQFGTMREFAccess().getGroup_0()); }
(rule__QFGTMREF__Group_0__0)*
{ after(grammarAccess.getQFGTMREFAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QFGTMREF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QFGTMREF__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QFGTMREF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQFGTMREFAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getQFGTMREFAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QFGTMREF__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QFGTMREF__Group_0__0__Impl
	rule__QFGTMREF__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QFGTMREF__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQFGTMREFAccess().getIDTerminalRuleCall_0_0()); }
	RULE_ID
{ after(grammarAccess.getQFGTMREFAccess().getIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QFGTMREF__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QFGTMREF__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QFGTMREF__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQFGTMREFAccess().getColonColonKeyword_0_1()); }

	KEYWORD_3 

{ after(grammarAccess.getQFGTMREFAccess().getColonColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__FGMGrammarRoot__FgmlAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGMGrammarRootAccess().getFgmlFGMLibraryParserRuleCall_0_1_0()); }
	ruleFGMLibrary{ after(grammarAccess.getFGMGrammarRootAccess().getFgmlFGMLibraryParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FGMGrammarRoot__FgmscAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGMGrammarRootAccess().getFgmscFGMSubclauseParserRuleCall_1_0()); }
	ruleFGMSubclause{ after(grammarAccess.getFGMGrammarRootAccess().getFgmscFGMSubclauseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FGMLibrary__FeaturemappingsetAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGMLibraryAccess().getFeaturemappingsetFeatureMappingsetParserRuleCall_0()); }
	ruleFeatureMappingset{ after(grammarAccess.getFGMLibraryAccess().getFeaturemappingsetFeatureMappingsetParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMappingset__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMappingsetAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFeatureMappingsetAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMappingset__MappingsetAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMappingsetAccess().getMappingsetFeatureMappingsetCrossReference_2_1_0()); }
(
{ before(grammarAccess.getFeatureMappingsetAccess().getMappingsetFeatureMappingsetQFGTMREFParserRuleCall_2_1_0_1()); }
	ruleQFGTMREF{ after(grammarAccess.getFeatureMappingsetAccess().getMappingsetFeatureMappingsetQFGTMREFParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getFeatureMappingsetAccess().getMappingsetFeatureMappingsetCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMappingset__MappingAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMappingsetAccess().getMappingFeatureMappingParserRuleCall_3_0()); }
	ruleFeatureMapping{ after(grammarAccess.getFeatureMappingsetAccess().getMappingFeatureMappingParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FGMSubclause__MappingsetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFGMSubclauseAccess().getMappingsetFeatureMappingsetCrossReference_2_0()); }
(
{ before(grammarAccess.getFGMSubclauseAccess().getMappingsetFeatureMappingsetQFGTMREFParserRuleCall_2_0_1()); }
	ruleQFGTMREF{ after(grammarAccess.getFGMSubclauseAccess().getMappingsetFeatureMappingsetQFGTMREFParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getFGMSubclauseAccess().getMappingsetFeatureMappingsetCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMapping__LeftAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMappingAccess().getLeftFeaturePathParserRuleCall_0_0()); }
	ruleFeaturePath{ after(grammarAccess.getFeatureMappingAccess().getLeftFeaturePathParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureMapping__RightAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureMappingAccess().getRightFeaturePathParserRuleCall_2_0()); }
	ruleFeaturePath{ after(grammarAccess.getFeatureMappingAccess().getRightFeaturePathParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__FeatureGroupTypeAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathAccess().getFeatureGroupTypeFeatureGroupTypeCrossReference_0_0_0()); }
(
{ before(grammarAccess.getFeaturePathAccess().getFeatureGroupTypeFeatureGroupTypeQFGTMREFParserRuleCall_0_0_0_1()); }
	ruleQFGTMREF{ after(grammarAccess.getFeaturePathAccess().getFeatureGroupTypeFeatureGroupTypeQFGTMREFParserRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getFeaturePathAccess().getFeatureGroupTypeFeatureGroupTypeCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeaturePath__FeatureReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeaturePathAccess().getFeatureReferenceFeatureReferenceParserRuleCall_1_0()); }
	ruleFeatureReference{ after(grammarAccess.getFeaturePathAccess().getFeatureReferenceFeatureReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureReference__FeatureAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureReferenceAccess().getFeatureFeatureCrossReference_0()); }
(
{ before(grammarAccess.getFeatureReferenceAccess().getFeatureFeatureIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getFeatureReferenceAccess().getFeatureFeatureIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getFeatureReferenceAccess().getFeatureFeatureCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


