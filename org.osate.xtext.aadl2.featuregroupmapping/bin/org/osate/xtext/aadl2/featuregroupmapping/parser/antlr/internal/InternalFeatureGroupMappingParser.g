/*
* generated by Xtext
*/
parser grammar InternalFeatureGroupMappingParser;

options {
	tokenVocab=InternalFeatureGroupMappingLexer;
	superClass=AbstractInternalAntlrParser;
	
}

@header {
package org.osate.xtext.aadl2.featuregroupmapping.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.osate.xtext.aadl2.featuregroupmapping.services.FeatureGroupMappingGrammarAccess;

}

@members {


	private FeatureGroupMappingGrammarAccess grammarAccess;
	 	
	public InternalFeatureGroupMappingParser(TokenStream input, FeatureGroupMappingGrammarAccess grammarAccess) {
		this(input);
		this.grammarAccess = grammarAccess;
		registerRules(grammarAccess.getGrammar());
	}
	
	@Override
	protected String getFirstRuleName() {
		return "FGMGrammarRoot";	
	} 
	   	   	
	@Override
	protected FeatureGroupMappingGrammarAccess getGrammarAccess() {
		return grammarAccess;
	}
}

@rulecatch { 
	catch (RecognitionException re) { 
	    recover(input,re); 
	    appendSkippedTokens();
	}
}




// Entry rule entryRuleFGMGrammarRoot
entryRuleFGMGrammarRoot returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getFGMGrammarRootRule()); }
	 iv_ruleFGMGrammarRoot=ruleFGMGrammarRoot 
	 { $current=$iv_ruleFGMGrammarRoot.current; } 
	 EOF 
;

// Rule FGMGrammarRoot
ruleFGMGrammarRoot returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_8
    {
    	newLeafNode(otherlv_0, grammarAccess.getFGMGrammarRootAccess().getLibraryKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFGMGrammarRootAccess().getFgmlFGMLibraryParserRuleCall_0_1_0()); 
	    }
		lv_fgml_1_0=ruleFGMLibrary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFGMGrammarRootRule());
	        }
       		set(
       			$current, 
       			"fgml",
        		lv_fgml_1_0, 
        		"FGMLibrary");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFGMGrammarRootAccess().getFgmscFGMSubclauseParserRuleCall_1_0()); 
	    }
		lv_fgmsc_2_0=ruleFGMSubclause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFGMGrammarRootRule());
	        }
       		set(
       			$current, 
       			"fgmsc",
        		lv_fgmsc_2_0, 
        		"FGMSubclause");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFGMLibrary
entryRuleFGMLibrary returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getFGMLibraryRule()); }
	 iv_ruleFGMLibrary=ruleFGMLibrary 
	 { $current=$iv_ruleFGMLibrary.current; } 
	 EOF 
;

// Rule FGMLibrary
ruleFGMLibrary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getFGMLibraryAccess().getFgtmappingsetFGTMappingsetParserRuleCall_0()); 
	    }
		lv_fgtmappingset_0_0=ruleFGTMappingset		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFGMLibraryRule());
	        }
       		add(
       			$current, 
       			"fgtmappingset",
        		lv_fgtmappingset_0_0, 
        		"FGTMappingset");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleFGTMappingset
entryRuleFGTMappingset returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getFGTMappingsetRule()); }
	 iv_ruleFGTMappingset=ruleFGTMappingset 
	 { $current=$iv_ruleFGTMappingset.current; } 
	 EOF 
;

// Rule FGTMappingset
ruleFGTMappingset returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_9
    {
    	newLeafNode(otherlv_0, grammarAccess.getFGTMappingsetAccess().getMappingsKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFGTMappingsetAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFGTMappingsetRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
	otherlv_2=KEYWORD_7
    {
    	newLeafNode(otherlv_2, grammarAccess.getFGTMappingsetAccess().getExtendsKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFGTMappingsetRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getFGTMappingsetAccess().getMappingsetFGTMappingsetCrossReference_2_1_0()); 
	    }
		ruleQFGTMREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getFGTMappingsetAccess().getMappingFGMMappingParserRuleCall_3_0()); 
	    }
		lv_mapping_4_0=ruleFGMMapping		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFGTMappingsetRule());
	        }
       		add(
       			$current, 
       			"mapping",
        		lv_mapping_4_0, 
        		"FGMMapping");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_5=KEYWORD_5
    {
    	newLeafNode(otherlv_5, grammarAccess.getFGTMappingsetAccess().getEndKeyword_4());
    }

	otherlv_6=KEYWORD_9
    {
    	newLeafNode(otherlv_6, grammarAccess.getFGTMappingsetAccess().getMappingsKeyword_5());
    }

	otherlv_7=KEYWORD_2
    {
    	newLeafNode(otherlv_7, grammarAccess.getFGTMappingsetAccess().getSemicolonKeyword_6());
    }
)
;





// Entry rule entryRuleFGMSubclause
entryRuleFGMSubclause returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getFGMSubclauseRule()); }
	 iv_ruleFGMSubclause=ruleFGMSubclause 
	 { $current=$iv_ruleFGMSubclause.current; } 
	 EOF 
;

// Rule FGMSubclause
ruleFGMSubclause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_6
    {
    	newLeafNode(otherlv_0, grammarAccess.getFGMSubclauseAccess().getUseKeyword_0());
    }

	otherlv_1=KEYWORD_9
    {
    	newLeafNode(otherlv_1, grammarAccess.getFGMSubclauseAccess().getMappingsKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFGMSubclauseRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getFGMSubclauseAccess().getMappingsetFGTMappingsetCrossReference_2_0()); 
	    }
		ruleQFGTMREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=KEYWORD_2
    {
    	newLeafNode(otherlv_3, grammarAccess.getFGMSubclauseAccess().getSemicolonKeyword_3());
    }
)
;













// Entry rule entryRuleFGMMapping
entryRuleFGMMapping returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getFGMMappingRule()); }
	 iv_ruleFGMMapping=ruleFGMMapping 
	 { $current=$iv_ruleFGMMapping.current; } 
	 EOF 
;

// Rule FGMMapping
ruleFGMMapping returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFGMMappingAccess().getLeftFeaturePathParserRuleCall_0_0()); 
	    }
		lv_left_0_0=ruleFeaturePath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFGMMappingRule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_0_0, 
        		"FeaturePath");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_1=KEYWORD_4
    {
    	newLeafNode(otherlv_1, grammarAccess.getFGMMappingAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFGMMappingAccess().getRightFeaturePathParserRuleCall_2_0()); 
	    }
		lv_right_2_0=ruleFeaturePath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFGMMappingRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_2_0, 
        		"FeaturePath");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=KEYWORD_2
    {
    	newLeafNode(otherlv_3, grammarAccess.getFGMMappingAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleFeaturePath
entryRuleFeaturePath returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getFeaturePathRule()); }
	 iv_ruleFeaturePath=ruleFeaturePath 
	 { $current=$iv_ruleFeaturePath.current; } 
	 EOF 
;

// Rule FeaturePath
ruleFeaturePath returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeaturePathRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getFeaturePathAccess().getFeatureGroupTypeFeatureGroupTypeCrossReference_0_0_0()); 
	}

)
)
	otherlv_1=KEYWORD_1
    {
    	newLeafNode(otherlv_1, grammarAccess.getFeaturePathAccess().getFullStopKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFeaturePathAccess().getFeatureReferenceFeatureReferenceParserRuleCall_1_0()); 
	    }
		lv_featureReference_2_0=ruleFeatureReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeaturePathRule());
	        }
       		add(
       			$current, 
       			"featureReference",
        		lv_featureReference_2_0, 
        		"FeatureReference");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleFeatureReference
entryRuleFeatureReference returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getFeatureReferenceRule()); }
	 iv_ruleFeatureReference=ruleFeatureReference 
	 { $current=$iv_ruleFeatureReference.current; } 
	 EOF 
;

// Rule FeatureReference
ruleFeatureReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureReferenceRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getFeatureReferenceAccess().getFeatureFeatureCrossReference_0()); 
	}

)
)
;





// Entry rule entryRuleQFGTMREF
entryRuleQFGTMREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getQFGTMREFRule()); } 
	 iv_ruleQFGTMREF=ruleQFGTMREF 
	 { $current=$iv_ruleQFGTMREF.current.getText(); }  
	 EOF 
;

// Rule QFGTMREF
ruleQFGTMREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQFGTMREFAccess().getIDTerminalRuleCall_0_0()); 
    }

	kw=KEYWORD_3 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQFGTMREFAccess().getColonColonKeyword_0_1()); 
    }
)*    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQFGTMREFAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





